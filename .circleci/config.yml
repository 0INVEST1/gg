version: 2.1

executors:
  gcc7:
    docker:
      - image: gcc:7
        environment:
          CXX: g++
  clang6:
    docker:
      - image: ubuntu:18.04
        environment:
          CXX: clang++-6.0

commands:
  init_gcc7:
    steps:
      - run: echo true
  init_clang6:
    steps:
      - run: apt-get install -y clang build-essential git

jobs:

  # Parameterized job to run all tests with "make"
  make_test:
    description: Build, run tests and check performance
    parameters:
      compiler:
        description: Compiler 
        type: string
      archflags:
        description: Architecture flags (ARCHFLAGS)
        default: ""
        type: string

    executor: << parameters.compiler >>

    environment:
      ARCHFLAGS: << parameters.archflags >>

    steps:
      - checkout
      - run: apt-get update -qq
      - init_<< parameters.compiler >>
      - run: make
      - run: make amalgamate
      - run: make test
      - run: make checkperf

  # Parameterized job to run all tests with "cmake"
  cmake_test:
    description: Build, run tests and check performance

    parameters:
      compiler:
        description: Compiler 
        type: string
      flags:
        description: flags to pass to cmake
        default: ""
        type: string

    executor: << parameters.compiler >>

    steps:
      - run: apt-get update -qq
      - init_<< parameters.compiler >>
      - run: apt-get install -y cmake
      - checkout
      - run: cmake << parameters.flags >>
      - run: make
      - run: make test

workflows:
  version: 2.1
  build_and_test:
    jobs:
      # gcc7
      - make_test:  { compiler: gcc7 }
      - cmake_test: { compiler: gcc7, flags: -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: gcc7, flags: -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: gcc7, flags: -DSIMDJSON_BUILD_STATIC=OFF -DSIMDJSON_SANITIZE=ON }
      # gcc7 - no AVX
      - make_test:  { compiler: gcc7, archflags: -march=nehalem }
      - cmake_test: { compiler: gcc7, flags: -DSIMDJSON_DISABLE_AVX=ON -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: gcc7, flags: -DSIMDJSON_DISABLE_AVX=ON -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: gcc7, flags: -DSIMDJSON_DISABLE_AVX=ON -DSIMDJSON_BUILD_STATIC=OFF -DSIMDJSON_SANITIZE=ON }
      # clang6
      - make_test:  { compiler: clang6 }
      - cmake_test: { compiler: clang6, flags: -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: clang6, flags: -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: clang6, flags: -DSIMDJSON_BUILD_STATIC=OFF -DSIMDJSON_SANITIZE=ON }
      # clang6 - no AVX
      - make_test:  { compiler: clang6, archflags: -march=nehalem }
      - cmake_test: { compiler: clang6, flags: -DSIMDJSON_DISABLE_AVX=ON -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: clang6, flags: -DSIMDJSON_DISABLE_AVX=ON -DSIMDJSON_BUILD_STATIC=ON }
      - cmake_test: { compiler: clang6, flags: -DSIMDJSON_DISABLE_AVX=ON -DSIMDJSON_BUILD_STATIC=OFF -DSIMDJSON_SANITIZE=ON }

      # TODO add windows: https://circleci.com/docs/2.0/configuration-reference/#windows

